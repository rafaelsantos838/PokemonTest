{"version":3,"sources":["App.js","index.js"],"names":["App","submitChange","event","preventDefault","getPokemon","onSearchChange","setState","searchfield","target","value","toLowerCase","a","toNewPoke","fetch","state","url","json","data","push","Pokemon","console","log","renderDetails","types","length","className","src","sprites","front_default","width","height","alt","name","id","type","weight","randomGenerator","Math","floor","random","document","getElementById","reset","onClick","this","onSubmit","onChange","placeholder","map","React","Component","ReactDOM","render","StrictMode"],"mappings":"0QA+FeA,E,kDA3Fb,aAAc,IAAD,8BACX,gBAOFC,aAAe,SAACC,GACdA,EAAMC,iBACN,EAAKC,cAVM,EAabC,eAAiB,SAACH,GAChB,EAAKI,SAAS,CAACC,YAAaL,EAAMM,OAAOC,MAAMC,iBAdpC,EAiBbN,WAjBa,sBAiBA,gCAAAO,EAAA,6DACLC,EAAY,GADP,kBAGUC,MAAM,qCAAD,OAAsC,EAAKC,MAAMP,cAHhE,cAGFQ,EAHE,gBAIWA,EAAIC,OAJf,OAIFC,EAJE,OAKRL,EAAUM,KAAKD,GACf,EAAKX,SAAS,CAACa,QAASP,IANhB,kDAQRQ,QAAQC,IAAI,WAAZ,MARQ,0DAjBA,EA6BbC,cAAgB,WACd,OAA2C,IAAvC,EAAKR,MAAMK,QAAQ,GAAGI,MAAMC,OAE1B,sBAAgBC,UAAU,OAA1B,UACI,qBAAeC,IAAK,EAAKZ,MAAMK,QAAQ,GAAGQ,QAAQC,cAAeC,MAAM,MAAMC,OAAO,MAAMC,IAAM,EAAKjB,MAAMK,QAAQ,GAAGa,MAA7G,OADb,IACmI,uBAC/H,sBAAKP,UAAU,YAAf,qBACW,EAAKX,MAAMK,QAAQ,GAAGc,GADjC,IACqC,uBADrC,SAES,EAAKnB,MAAMK,QAAQ,GAAGa,KAF/B,IAEqC,uBAFrC,UAGU,EAAKlB,MAAMK,QAAQ,GAAGI,MAAM,GAAGW,KAAKF,KAH9C,IAGoD,uBAHpD,SAIS,EAAKlB,MAAMK,QAAQ,GAAGW,OAAO,GAJtC,KAI2C,uBAJ3C,WAKW,EAAKhB,MAAMK,QAAQ,GAAGgB,OAAO,GALxC,MAK8C,4BAPzC,QAaX,sBAAgBV,UAAU,OAA1B,UACM,qBAAeC,IAAK,EAAKZ,MAAMK,QAAQ,GAAGQ,QAAQC,cAAeC,MAAM,MAAMC,OAAO,MAAMC,IAAM,EAAKjB,MAAMK,QAAQ,GAAGa,MAA7G,OACT,sBAAKP,UAAU,YAAf,qBACW,EAAKX,MAAMK,QAAQ,GAAGc,GADjC,IACqC,uBADrC,SAES,EAAKnB,MAAMK,QAAQ,GAAGa,KAF/B,IAEqC,uBAFrC,UAGU,EAAKlB,MAAMK,QAAQ,GAAGI,MAAM,GAAGW,KAAKF,KAH9C,QAGyD,EAAKlB,MAAMK,QAAQ,GAAGI,MAAM,GAAGW,KAAKF,KAH7F,IAGmG,uBAHnG,SAIS,EAAKlB,MAAMK,QAAQ,GAAGW,OAAO,GAJtC,KAI2C,uBAJ3C,WAKW,EAAKhB,MAAMK,QAAQ,GAAGgB,OAAO,GALxC,MAK8C,4BAP3C,SA7CF,EA4DbC,gBA5Da,uCA4DK,WAAOlC,GAAP,SAAAS,EAAA,sEACV,EAAKL,SAAS,CAACC,YAAa8B,KAAKC,MAAM,IAAAD,KAAKE,SAAoB,KADtD,OAEhBC,SAASC,eAAe,sBAAsBC,QAC9CxC,EAAMC,iBACN,EAAKC,aAJW,2CA5DL,sDAEX,EAAKU,MAAQ,CACTK,QAAS,GACTZ,YAAa,IAJN,E,0CAmEb,WAAS,IAAD,OAEN,OADAa,QAAQC,IAAI,KAEZ,sBAAKI,UAAU,MAAf,UACE,wBAAQkB,QAASC,KAAKR,gBAAtB,4BAGA,sBAAMS,SAAUD,KAAK3C,aAAcgC,GAAG,qBAAtC,SACE,gCACE,uBACEC,KAAK,OACLY,SAAUF,KAAKvC,eACf0C,YAAY,sCAIbH,KAAK9B,MAAMK,QAAQ6B,KAAI,SAAC/B,GACvB,OAAQ,EAAKK,0B,GArFP2B,IAAMC,WCExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFb,SAASC,eAAe,W","file":"static/js/main.0071e9ed.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n        Pokemon: [],\n        searchfield: ''\n    }\n  }\n\n  submitChange = (event) => {\n    event.preventDefault();\n    this.getPokemon(); \n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value.toLowerCase()})  \n  }\n\n  getPokemon = async () => {\n    const toNewPoke = [];\n    try {\n       const url = await fetch(`https://pokeapi.co/api/v2/pokemon/${this.state.searchfield}`);\n       const data = await url.json();\n       toNewPoke.push(data);\n       this.setState({Pokemon: toNewPoke});\n     } catch (error) {\n       console.log('Error!!!', error);\n     } \n  } \n \n  renderDetails = () => {\n    if (this.state.Pokemon[0].types.length === 1) {\n      return (  \n          <div key='type' className=\"tile\" >\n              <img key='img' src={this.state.Pokemon[0].sprites.front_default} width='200' height='200' alt ={this.state.Pokemon[0].name} /> <br />\n              <div className=\"PKMDetail\">\n                Number: {this.state.Pokemon[0].id} <br />\n                Name: {this.state.Pokemon[0].name} <br />\n                Types: {this.state.Pokemon[0].types[0].type.name} <br />\n                Size: {this.state.Pokemon[0].height/10}m <br />\n                Weight: {this.state.Pokemon[0].weight/10}kg <br />\n              </div>\n          </div>\n      );\n    } else {\n      return (\n        <div key='type' className=\"tile\">\n              <img key='img' src={this.state.Pokemon[0].sprites.front_default} width='200' height='200' alt ={this.state.Pokemon[0].name} />\n              <div className=\"PKMDetail\">\n                Number: {this.state.Pokemon[0].id} <br />\n                Name: {this.state.Pokemon[0].name} <br />\n                Types: {this.state.Pokemon[0].types[0].type.name} and {this.state.Pokemon[0].types[1].type.name} <br />\n                Size: {this.state.Pokemon[0].height/10}m <br />\n                Weight: {this.state.Pokemon[0].weight/10}kg <br />\n              </div>\n        </div>  \n      );\n\n    }\n  }\n\n  randomGenerator = async (event) => {\n    await this.setState({searchfield: Math.floor(Math.random()* (898-1) + 1)})\n    document.getElementById(\"create-course-form\").reset();\n    event.preventDefault();\n    this.getPokemon(); \n  }\n\n  render(){\n    console.log(\"1\")\n    return(\n    <div className=\"App\">\n      <button onClick={this.randomGenerator}>\n        Random Pokemon\n      </button>\n      <form onSubmit={this.submitChange} id=\"create-course-form\">\n        <label>\n          <input \n            type=\"text\"\n            onChange={this.onSearchChange}\n            placeholder=\"Insert Pokemon name or Number\"\n          />\n        </label>\n      </form>\n          {this.state.Pokemon.map((data) => {\n            return (this.renderDetails())\n          })}\n    </div>  \n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}